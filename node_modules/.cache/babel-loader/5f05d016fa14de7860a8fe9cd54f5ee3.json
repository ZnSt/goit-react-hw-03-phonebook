{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport shortid from \"shortid\";\nimport { Component } from \"react\";\nimport { Form } from \"./Form\";\nimport { ContactsList } from \"./ContactsList\";\nimport { Filter } from \"./Filter\";\nimport { Modal } from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: \"\",\n      showModal: false\n    };\n\n    this.addContact = (name, number) => {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number\n      };\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [newContact, ...contacts]\n        };\n      });\n\n      if (this.state.contacts.some(contact => contact.name === name)) {\n        return alert(`${name} is already in contacts`);\n      }\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n\n    this.changeFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.getVisibleName = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normilizedFilter = filter.toLowerCase().trim();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilter));\n    };\n\n    this.toggleModal = () => {};\n  }\n\n  componentDidMount() {\n    const contactsArr = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contactsArr);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const filterName = this.getVisibleName();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\",\n          fontWeight: \"bold\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total contacts: \", contacts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n        contacts: filterName,\n        onDeleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["shortid","Component","Form","ContactsList","Filter","Modal","App","state","contacts","filter","showModal","addContact","name","number","newContact","id","generate","setState","some","contact","alert","deleteContact","contactId","prevState","changeFilter","event","currentTarget","value","getVisibleName","normilizedFilter","toLowerCase","trim","includes","toggleModal","componentDidMount","contactsArr","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","filterName","marginBottom","fontWeight","length"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,QAAsB,SAAtB;;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,SAAS,EAAE;AAJL,KADyB;;AAAA,SAQjCC,UARiC,GAQpB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,YAAMC,UAAU,GAAG;AACjBC,QAAAA,EAAE,EAAEf,OAAO,CAACgB,QAAR,EADa;AAEjBJ,QAAAA,IAFiB;AAGjBC,QAAAA;AAHiB,OAAnB;AAMA,WAAKI,QAAL,CAAc;AAAA,YAAC;AAAET,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC/BA,UAAAA,QAAQ,EAAE,CAACM,UAAD,EAAa,GAAGN,QAAhB;AADqB,SAAnB;AAAA,OAAd;;AAIA,UAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,IAApB,CAA0BC,OAAD,IAAaA,OAAO,CAACP,IAAR,KAAiBA,IAAvD,CAAJ,EAAkE;AAChE,eAAOQ,KAAK,CAAE,GAAER,IAAK,yBAAT,CAAZ;AACD;AACF,KAtBgC;;AAAA,SAwBjCS,aAxBiC,GAwBhBC,SAAD,IAAe;AAC7B,WAAKL,QAAL,CAAeM,SAAD,KAAgB;AAC5Bf,QAAAA,QAAQ,EAAEe,SAAS,CAACf,QAAV,CAAmBC,MAAnB,CAA2BU,OAAD,IAAaA,OAAO,CAACJ,EAAR,KAAeO,SAAtD;AADkB,OAAhB,CAAd;AAGD,KA5BgC;;AAAA,SA8BjCE,YA9BiC,GA8BjBC,KAAD,IAAW;AACxB,WAAKR,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEgB,KAAK,CAACC,aAAN,CAAoBC;AAA9B,OAAd;AACD,KAhCgC;;AAAA,SAkCjCC,cAlCiC,GAkChB,MAAM;AACrB,YAAM;AAAEnB,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAuB,KAAKD,KAAlC;AACA,YAAMsB,gBAAgB,GAAGpB,MAAM,CAACqB,WAAP,GAAqBC,IAArB,EAAzB;AAEA,aAAOvB,QAAQ,CAACC,MAAT,CAAiBU,OAAD,IAAaA,OAAO,CAACP,IAAR,CAAakB,WAAb,GAA2BE,QAA3B,CAAoCH,gBAApC,CAA7B,CAAP;AACD,KAvCgC;;AAAA,SA0DjCI,WA1DiC,GA0DnB,MAAM,CAAE,CA1DW;AAAA;;AAyCjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAApB;AACA,UAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAvB;;AAEA,QAAIG,cAAJ,EAAoB;AAClB,WAAKrB,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAAE8B;AADE,OAAd;AAGD;AACF;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYnB,SAAZ,EAAuB;AACvC,QAAI,KAAKhB,KAAL,CAAWC,QAAX,KAAwBe,SAAS,CAACf,QAAtC,EAAgD;AAC9C4B,MAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAACK,SAAL,CAAe,KAAKrC,KAAL,CAAWC,QAA1B,CAAjC;AACD;AACF;;AAIDqC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKF,KAAlC;AAEA,UAAMuC,UAAU,GAAG,KAAKlB,cAAL,EAAnB;AAEA,wBACE;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKjB;AAArB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,KAAK,EAAE;AAAEoC,UAAAA,YAAY,EAAE,MAAhB;AAAwBC,UAAAA,UAAU,EAAE;AAApC,SAAZ;AAAA,+BACE;AAAA,yCAAoBxC,QAAQ,CAACyC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAExC,MAAf;AAAuB,QAAA,QAAQ,EAAE,KAAKe;AAAtC;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEsB,UAAxB;AAAoC,QAAA,eAAe,EAAE,KAAKzB;AAA1D;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADF;AAaD;;AA9EgC","sourcesContent":["import shortid from \"shortid\";\nimport { Component } from \"react\";\nimport { Form } from \"./Form\";\nimport { ContactsList } from \"./ContactsList\";\nimport { Filter } from \"./Filter\";\nimport { Modal } from \"./Modal\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n\n    filter: \"\",\n    showModal: false,\n  };\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    if (this.state.contacts.some((contact) => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleName = () => {\n    const { filter, contacts } = this.state;\n    const normilizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normilizedFilter));\n  };\n\n  componentDidMount() {\n    const contactsArr = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contactsArr);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  toggleModal = () => {};\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filterName = this.getVisibleName();\n\n    return (\n      <>\n        <Modal></Modal>\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts:</h2>\n        <div style={{ marginBottom: \"10px\", fontWeight: \"bold\" }}>\n          <p>Total contacts: {contacts.length}</p>\n        </div>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList contacts={filterName} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}