{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport { Component } from \"react\";\nimport { FormSt, Btn, Input, Label } from \"./Form.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.reset();\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FormSt, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: this.state.name,\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleChange,\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"number\",\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"tel\",\n          value: this.state.number,\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleChange,\n          id: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Btn, {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"names":["Component","FormSt","Btn","Input","Label","Form","state","name","number","handleSubmit","event","preventDefault","console","log","reset","handleChange","value","currentTarget","setState","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,KAAtB,EAA6BC,KAA7B,QAA0C,eAA1C;;AAEA,OAAO,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAClCM,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;;AAAA,SAMlCC,YANkC,GAMlBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,WAAKQ,KAAL;AACD,KAViC;;AAAA,SAYlCC,YAZkC,GAYlBL,KAAD,IAAW;AACxB,YAAM;AAAEH,QAAAA,IAAF;AAAQS,QAAAA;AAAR,UAAkBN,KAAK,CAACO,aAA9B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACX,IAAD,GAAQS;AADI,OAAd;AAGD,KAjBiC;;AAAA,SAmBlCF,KAnBkC,GAmB1B,MAAM;AACZ,WAAKI,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KArBiC;AAAA;;AAuBlCW,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKV,YAAvB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAFpB;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,OAAO,EAAC,wHAJV;AAKE,UAAA,KAAK,EAAC,wIALR;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,QAAQ,EAAE,KAAKQ,YAPjB;AAQE,UAAA,EAAE,EAAC;AARL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA,0CAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,MAFpB;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,OAAO,EAAC,wFAJV;AAKE,UAAA,KAAK,EAAC,8FALR;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,QAAQ,EAAE,KAAKO,YAPjB;AAQE,UAAA,EAAE,EAAC;AARL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA6BE;AAAA;AAAA;AAAA;AAAA,cA7BF,eA8BE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD;;AA1DiC","sourcesContent":["import { Component } from \"react\";\nimport { FormSt, Btn, Input, Label } from \"./Form.styled\";\n\nexport class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    this.reset();\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <FormSt onSubmit={this.handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={this.handleChange}\n            id=\"name\"\n          />\n        </Label>\n\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleChange}\n            id=\"number\"\n          />\n        </Label>\n\n        <br />\n        <Btn type=\"submit\">Add Contact</Btn>\n      </FormSt>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}