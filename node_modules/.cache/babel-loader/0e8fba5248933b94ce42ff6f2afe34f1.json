{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport shortid from \"shortid\";\nimport { Component } from \"react\";\nimport { Form } from \"./Form\";\nimport { ContactsList } from \"./ContactsList\";\nimport { Filter } from \"./Filter\";\nimport { Modal } from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: \"\",\n      showModal: false\n    };\n\n    this.addContact = (name, number) => {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number\n      };\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [newContact, ...contacts]\n        };\n      });\n\n      if (this.state.contacts.some(contact => contact.name === name)) {\n        return alert(`${name} is already in contacts`);\n      }\n\n      this.toggleModal();\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n\n    this.changeFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.getVisibleName = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normilizedFilter = filter.toLowerCase().trim();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilter));\n    };\n\n    this.toggleModal = () => {\n      this.setState(_ref2 => {\n        let {\n          showModal\n        } = _ref2;\n        return {\n          showModal: !showModal\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    const contactsArr = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contactsArr);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter,\n      showModal\n    } = this.state;\n    const filterName = this.getVisibleName();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Click to add a new contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.toggleModal,\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"180px\",\n          height: \"50px\",\n          backgroundColor: \"transparent\",\n          borderRadius: \"5px\",\n          padding: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"18px\"\n        },\n        children: \"Open PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\",\n            position: \"relative\"\n          },\n          children: \"Phonebook: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.toggleModal,\n          style: {\n            position: \"absolute\",\n            top: \"6px\",\n            right: \"10px\",\n            display: \"block\",\n            width: \"55px \",\n            backgroundColor: \"transparent\",\n            borderRadius: \"5px\",\n            padding: \"5px\",\n            cursor: \"pointer\"\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Please, enter name and number user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\",\n          fontWeight: \"bold\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total contacts: \", contacts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n        contacts: filterName,\n        onDeleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["shortid","Component","Form","ContactsList","Filter","Modal","App","state","contacts","filter","showModal","addContact","name","number","newContact","id","generate","setState","some","contact","alert","toggleModal","deleteContact","contactId","prevState","changeFilter","event","currentTarget","value","getVisibleName","normilizedFilter","toLowerCase","trim","includes","componentDidMount","contactsArr","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","filterName","textAlign","marginLeft","marginRight","display","alignItems","justifyContent","width","height","backgroundColor","borderRadius","padding","cursor","fontSize","position","top","right","marginBottom","fontWeight","length"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport { Component } from \"react\";\nimport { Form } from \"./Form\";\nimport { ContactsList } from \"./ContactsList\";\nimport { Filter } from \"./Filter\";\nimport { Modal } from \"./Modal\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n\n    filter: \"\",\n    showModal: false,\n  };\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    if (this.state.contacts.some((contact) => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    this.toggleModal();\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleName = () => {\n    const { filter, contacts } = this.state;\n    const normilizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normilizedFilter));\n  };\n\n  componentDidMount() {\n    const contactsArr = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contactsArr);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { contacts, filter, showModal } = this.state;\n\n    const filterName = this.getVisibleName();\n\n    return (\n      <>\n        <h1 style={{ textAlign: \"center\" }}>Click to add a new contact</h1>\n        <button\n          type=\"button\"\n          onClick={this.toggleModal}\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"180px\",\n            height: \"50px\",\n            backgroundColor: \"transparent\",\n            borderRadius: \"5px\",\n            padding: \"5px\",\n            cursor: \"pointer\",\n            fontSize: \"18px\",\n          }}\n        >\n          Open PhoneBook\n        </button>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <h2 style={{ textAlign: \"center\", position: \"relative\" }}>Phonebook: </h2>\n            <Form onSubmit={this.addContact} />\n            <button\n              type=\"button\"\n              onClick={this.toggleModal}\n              style={{\n                position: \"absolute\",\n                top: \"6px\",\n                right: \"10px\",\n                display: \"block\",\n                width: \"55px \",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                padding: \"5px\",\n                cursor: \"pointer\",\n              }}\n            >\n              Close\n            </button>\n            <p style={{ textAlign: \"center\" }}>Please, enter name and number user</p>\n          </Modal>\n        )}\n\n        <h2>Contacts:</h2>\n        <div style={{ marginBottom: \"10px\", fontWeight: \"bold\" }}>\n          <p>Total contacts: {contacts.length}</p>\n        </div>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList contacts={filterName} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}